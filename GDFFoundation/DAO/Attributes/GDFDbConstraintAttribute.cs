#region Copyright

// Game-Data-Forge Solution
// Written by CONTART Jean-François & BOULOGNE Quentin
// GDFFoundation.csproj GDFDbConstraintAttribute.cs create at 2025/03/25 11:03:36
// ©2024-2025 idéMobi SARL FRANCE

#endregion

#region

using System;

#endregion

namespace GDFFoundation
{
    /// <summary>
    ///     Abstract attribute to help define constraints.
    /// </summary>
    [AttributeUsage(AttributeTargets.Property, AllowMultiple = false, Inherited = true)]
    public abstract class GDFDbConstraintAttribute : Attribute
    {
        #region Instance fields and properties

        /// <summary>
        ///     Set to true to force the use of an auto generated name for the constraint.
        ///     In that case, <see cref="constraintName" /> is used to group properties into the same constraint.
        /// </summary>
        public bool autoGenerated;

        /// <summary>
        ///     The name of the constraint.
        ///     It is used to group properties together into the same constraint.
        /// </summary>
        public string constraintName;

        /// <summary>
        ///     Has the constraint an auto generated name ?
        /// </summary>
        public bool IsAutoGenrated => string.IsNullOrWhiteSpace(constraintName) || autoGenerated;

        #endregion

        #region Instance constructors and destructors

        /// <inheritdoc cref="GDFDbConstraintAttribute(string, bool)" />
        public GDFDbConstraintAttribute()
            : this("")
        {
        }

        /// <summary>
        ///     Constructor.
        /// </summary>
        /// <param name="constraintName">The name of the constraint. It is used to group properties together into the same constraint.</param>
        /// <param name="autoGeneratedName">Set to true to force the use of an auto generated name for the constraint.<br />In that case, <see cref="constraintName" /> is used to group properties into the same constraint.</param>
        public GDFDbConstraintAttribute(string constraintName, bool autoGeneratedName = false)
        {
            this.constraintName = constraintName;
            autoGenerated = autoGeneratedName;
        }

        #endregion
    }
}