#region Copyright

// Game-Data-Forge Solution
// Written by CONTART Jean-François & BOULOGNE Quentin
// GDFFoundation.csproj GDFBackDebug.cs create at 2025/03/25 11:03:36
// ©2024-2025 idéMobi SARL FRANCE

#endregion


#region

using System.Collections.Generic;
using System.Diagnostics;
using System.Reflection;

#endregion

namespace GDFFoundation
{
    /// <summary>
    ///     This abstract class provides debugging support for the GDFFoundation library.
    /// </summary>
    public abstract class GDFBackDebug
    {
        #region Static methods

        /// <summary>
        ///     Prints debug information if the DEBUG symbol is defined.
        /// </summary>
        /// <param name="sSql">The SQL string to print.</param>
        [Conditional("DEBUG")]
        public static void Debug(string sSql)
        {
            // if (false)
            {
                string tTitle = "unknown";
                List<string> tTrace = new List<string>() { tTitle };
                StackTrace tStackTrace = new StackTrace();

                for (int tI = 1; tI < 5; tI++)
                {
                    StackFrame tStackFrame = tStackTrace.GetFrame(tI);
                    if (tStackFrame != null)
                    {
                        MethodBase tMethodBase = tStackFrame.GetMethod();
                        if (tMethodBase != null)
                        {
                            string tMethodName = tMethodBase.Name;
                            tTrace.Add(tMethodName);
                        }
                    }
                }

                if (tTrace.Count > 1)
                {
                    tTrace.RemoveAt(0);
                }

                tTrace.Add("");
                tTrace.Add(sSql);
                tTrace.Add("Log generated by " + nameof(GDFBackDebug) + "." + nameof(Debug) + "(…);");
                GDFLogger.Trace(tTrace[0], tTrace.ToArray());
            }
        }

        #endregion
    }
}